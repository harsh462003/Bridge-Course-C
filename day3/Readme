# Day 3 - C Programming Solutions

This repository contains solutions to various C programming problems focusing on arrays, functions, strings, matrices, and mathematical operations.

## Files Structure

- `day3.h` - Header file with function declarations
- `day3.c` - Implementation of functions
- `main.c` - Main program with test cases and menu-driven math functions

## Problems Solved ✅
### 1. Array Sorting
- Function: `void sorting(int arr[],int s);`

### 2. Swap Two Numbers Using Function
Swap two numbers using pass by reference.
- Function: `swap_two_numbers(int*, int*)`

### 3. Find Min and Max in Array
Find minimum and maximum elements in an array using pointers.
- Function: `find_max_min(int array[], int size, int *max, int *min)`

### 5. Remove Duplicate Entries
Store numbers in array and remove duplicate entries.
- Function: `insert_data()` with `checkifexist()` helper

### 6. Linear Search
Search for an integer using linear search technique.
- Function: `linear_search(int arr[], int size, int element)`

### 7. Binary Search
Search for an integer using binary search technique.
- Function: `binarysearch(int arr[], int size, int element)`

### 8. Product of Consecutive Numbers
Calculate sum of products of consecutive numbers.
- Function: `productofconsecutive(int arr[], int size)`
- Example: [4,5,2,5,6,4,7] → 4×5 + 5×2 + 2×5 + 5×6 + 6×4 + 4×7 = 122

### 17. Mathematical Functions Menu
Menu-driven program for mathematical operations using math.h:
- Square Root
- Natural Log (ln x)
- Log base 10
- Power (x^n)
- Cosine (x in radians)

## Problems NOT Implemented ❌
### 4. Set Operations
- **Missing**: Union, Intersection, and Difference operations on integer sets
- **Functions needed**: `set_union()`, `set_intersection()`, `set_difference()`

### 9. String Length
- **Missing**: Find string length without using string.h

### 10. Date Display
- **Missing**: Convert numeric date to worded format using switch case

### 11. Case Conversion
- **Missing**: Convert lowercase to uppercase characters

### 12. String Reversal
- **Missing**: Reverse string without using string.h

### 13. Palindrome Check
- **Missing**: Check if string is palindrome

### 14. String Concatenation
- **Missing**: Concatenate strings without using string.h

### 15. Matrix Construction
- **Missing**: Construct and display 5×5 matrix

### 16. Matrix Transpose
- **Missing**: Find transpose of N×N matrix

### 17. Column Sum
- **Missing**: Find sum of each column in N×M matrix

### 18. Sparse Matrix Check
- **Missing**: Check if matrix is sparse (zeros > (n×m)/2)

### 12-15. Recursive Functions & Macros
- **Missing**: Recursive power calculation
- **Missing**: Recursive factorial
- **Missing**: Recursive series evaluation F(x) = x + x³/3! + x⁵/5! + ...
- **Missing**: Macro for concatenating integers
- **Missing**: Macro for square of number

## How to Compile and Run

```bash
gcc main.c day3.c -o day3_program -lm
./day3_program
```

Note: The `-lm` flag is required for math library functions.

## Known Issues
1. **Incomplete Implementation**: Only 7 out of 17 problems are fully implemented


## Current Features

- Pointer-based parameter passing
- Array manipulation and searching
- Mathematical function menu
- Input validation and error handling
- Duplicate removal logic
